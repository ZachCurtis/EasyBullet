"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[229],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var u=a.createContext({}),s=function(t){var e=a.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},p=function(t){var e=s(t.components);return a.createElement(u.Provider,{value:e},t.children)},d="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},y=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,u=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),d=s(n),y=r,m=d["".concat(u,".").concat(y)]||d[y]||c[y]||l;return n?a.createElement(m,i(i({ref:e},p),{},{components:n})):a.createElement(m,i({ref:e},p))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=y;var o={};for(var u in e)hasOwnProperty.call(e,u)&&(o[u]=e[u]);o.originalType=t,o[d]="string"==typeof t?t:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},1790:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:2},i="EasyBullet Settings",o={unversionedId:"api/easyBulletSettings",id:"api/easyBulletSettings",title:"EasyBullet Settings",description:"Full Lua Definition",source:"@site/docs/api/easyBulletSettings.md",sourceDirName:"api",slug:"/api/easyBulletSettings",permalink:"/EasyBullet/docs/api/easyBulletSettings",draft:!1,editUrl:"https://github.com/ZachCurtis/EasyBullet/docs/docs/api/easyBulletSettings.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"EasyBullet API",permalink:"/EasyBullet/docs/api/easyBullet"}},u={},s=[{value:"Full Lua Definition",id:"full-lua-definition",level:2},{value:"Default EasyBulletSettings",id:"default-easybulletsettings",level:2}],p={toc:s},d="wrapper";function c(t){let{components:e,...n}=t;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"easybullet-settings"},"EasyBullet Settings"),(0,r.kt)("h2",{id:"full-lua-definition"},"Full Lua Definition"),(0,r.kt)("p",null,"EasyBulletSettings"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'export type EasyBulletSettings = {\n    Gravity: boolean?, -- Should the bullet curve according to workspace.Gravity\n    RenderBullet: boolean?, -- Should EasyBullet display a rendered bullet on the client\n    BulletColor: Color3?, -- Sets the color of the bullets rendered\n    BulletThickness: number?, -- Sets the thickness of the bullets in studs\n    FilterList: {[number]: Instance}?, -- An array of instances assigned to RayParams.FilterDescendantsInstances\n    FilterType: Enum.RaycastFilterType?, -- The RaycastFilterType, either Include or Exclude\n    BulletPartProps: {[string]: unknown}?, -- A dictionary of properties matching the properties of BasePart to override the bullet part rendering. Cannot include keys "CFrame", "Size", or "Color"\n    BulletData: {[string]: unknown}? -- A dictionary of any data you wish to associate with this bullet. HitVelocity and BulletId are reserved keys for this table, and are set by EasyBullet before passing the BulletData table to the BulletHit, BulletHitHumanoid, and BulletUpdated events. Useful for variations such as displaying a different hit effect for a sniper, or altering the damage dependent on the gun type.\n}\n')),(0,r.kt)("h2",{id:"default-easybulletsettings"},"Default EasyBulletSettings"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Gravity"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"RenderBullet"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"BulletColor"),(0,r.kt)("td",{parentName:"tr",align:null},"Color3"),(0,r.kt)("td",{parentName:"tr",align:null},"Color3.new(0.945098, 0.490196, 0.062745)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"BulletThickness"),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},".1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"FilterList"),(0,r.kt)("td",{parentName:"tr",align:null},"{ ","[number]",": Instance }"),(0,r.kt)("td",{parentName:"tr",align:null},"{}")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"FilterType"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://create.roblox.com/docs/reference/engine/enums/RaycastFilterType"},"RaycastFilterType")),(0,r.kt)("td",{parentName:"tr",align:null},"Enum.RaycastFilterType.Exclude")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"BulletPartProps"),(0,r.kt)("td",{parentName:"tr",align:null},"{ ","[string]",": unknown }"),(0,r.kt)("td",{parentName:"tr",align:null},"{}")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"BulletData"),(0,r.kt)("td",{parentName:"tr",align:null},"{ ","[string]",": unknown }"),(0,r.kt)("td",{parentName:"tr",align:null},"{}")))))}c.isMDXComponent=!0}}]);